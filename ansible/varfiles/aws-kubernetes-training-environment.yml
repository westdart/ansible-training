env_spec: ../varfiles/aws-kubernetes-training-environment.yml
dest_dir: ../generated/aws-kubernetes-training-environment

terraform_roles_dir: ../../terraform
terraform_template: aws-infra-main.tf.j2
terraform_variables: aws-infra-variables.tf.j2
terraform_outputs: aws-infra-outputs.tf.j2
terraform_out_vars:  terraform_exposed_vars.yml.tpl.j2

key_path: "{{ ansible_env.HOME }}/.ssh/ansible-training-id_rsa"

infra_create_cloud: true
infra_cloudprovider_kind: 'aws'
infra_name: 'k1'
infra_description: 'Kubernetes Training Env'
infra_domain: 'localdomain'
infra_region: 'eu-west-2'
use_aws_dns: false

cloud_cidr: "10.0.0.0/16"

public_host_user: ec2-user

images: [
  { name: 'rhel_7_7', filter: 'RHEL-7.7*', account: '309956199498' }
]

root_block_device: {
  size: "10",
  type: "gp2"
}

machine_types: {
  kube_node: {
    type: "t2.micro",
    block_devices: [],
    image: 'rhel_7_7',
    external_ip: false
  }
}

envs: [
  { prefix: 'k1', subnet_cidr: "10.0.1.0/24", availability_zone: '{{ infra_region }}a',
    subnet_name: 'k1-default-public-subnet', name: "Ansible Training 1 env",
    node_groups: [
      { name: 'kubernetes_node', machine_type: 'kube_node', count: 2 }
    ]
  }
]

network_rules: [
  { name: 'internal_traffic', description: 'Open network within env', ingres_rules: [{}], egres_rules: [{}] }
]

security_groups: [
  { env: 'k1', name: 'k1_security_group', description: 'Network rules for k1 env', network_rule_refs: ['internal_traffic'] }
]
